
0
[1, 4, 0, 0, 1]
Number of user connected in  0  episode is:  [3 5 2 8 0]
Total user connected in  0  episode is:  18
1
2
3
4
C:\Users\tripats\Documents\GitHub\UAV_Subband_Allocation_DQN_Pytorch\main.py:156: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  minibatch = np.array(minibatch)
5
6
7
8
9
10
[1, 0, 3, 0, 3]
Number of user connected in  10  episode is:  [7 0 3 7 9]
Total user connected in  10  episode is:  26
11
12
13
14
15
16
17
18
19
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\UAV_Subband_Allocation_DQN_Pytorch\main.py", line 346, in <module>
    UAV_OB[k].train(batch_size, dnn_epoch)
  File "C:\Users\tripats\Documents\GitHub\UAV_Subband_Allocation_DQN_Pytorch\main.py", line 184, in train
    loss.backward()
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\torch\autograd\__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
