
0
[3, 2, 0, 0, 1, 1, 4]
Number of user connected in  0  episode is:  [2 4 4 0 1 3 0]
Total user connected in  0  episode is:  14
1
2
3
4
5
C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py:121: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ary = asanyarray(ary)
6
7
8
9
10
[0, 4, 1, 1, 1, 3, 1]
Number of user connected in  10  episode is:  [ 4  1  9  0 12  1  0]
Total user connected in  10  episode is:  27
11
12
13
14
15
16
17
18
19
20
[1, 3, 1, 2, 1, 3, 0]
Number of user connected in  20  episode is:  [ 7  8  1  6  7  0 16]
Total user connected in  20  episode is:  45
21
22
23
24
25
26
27
28
29
30
[0, 1, 1, 3, 1, 2, 0]
Number of user connected in  30  episode is:  [ 5 12 14  4  0  8  8]
Total user connected in  30  episode is:  51
31
32
33
34
35
36
37
38
39
40
[1, 1, 1, 2, 1, 2, 0]
Number of user connected in  40  episode is:  [15  0 14  9  0  0  8]
Total user connected in  40  episode is:  46
41
42
43
44
45
46
47
48
49
50
[1, 0, 2, 2, 1, 3, 0]
Number of user connected in  50  episode is:  [10  7 11  4 12 14  8]
Total user connected in  50  episode is:  66
51
52
53
54
55
56
57
58
59
60
[1, 1, 2, 3, 1, 3, 1]
Number of user connected in  60  episode is:  [ 9 11 11 13 12  8 18]
Total user connected in  60  episode is:  82
61
62
63
64
65
66
67
68
69
70
[1, 0, 2, 3, 1, 2, 1]
Number of user connected in  70  episode is:  [15  0 11  8 12 13 18]
Total user connected in  70  episode is:  77
71
72
73
74
75
76
77
78
79
80
[1, 1, 2, 2, 3, 2, 1]
Number of user connected in  80  episode is:  [15  0 11 17 12  0 18]
Total user connected in  80  episode is:  73
81
82
83
84
85
86
87
88
89
90
[1, 1, 2, 3, 3, 2, 2]
Number of user connected in  90  episode is:  [15  0 11  8 12 13 18]
Total user connected in  90  episode is:  77
91
92
93
94
95
96
97
98
99
Traceback (most recent call last):
  File "C:\Users\tripats\Documents\GitHub\uav_nw_madql_connectivity_pytorch\main.py", line 346, in <module>
    UAV_OB[k].train(batch_size, dnn_epoch)
  File "C:\Users\tripats\Documents\GitHub\uav_nw_madql_connectivity_pytorch\main.py", line 161, in train
    next_state = torch.FloatTensor(np.vstack(minibatch[:,3]))
  File "<__array_function__ internals>", line 180, in vstack
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py", line 279, in vstack
    arrs = atleast_2d(*tup)
  File "<__array_function__ internals>", line 180, in atleast_2d
  File "C:\Users\tripats\.conda\envs\uavenv\lib\site-packages\numpy\core\shape_base.py", line 128, in atleast_2d
    res.append(result)
KeyboardInterrupt